apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: grafana
  name: data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
      - envFrom:
        - secretRef:
            name: credentials
        image: grafana/grafana:10.2.4
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        name: main
        ports:
          - containerPort: 3000
            name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
  name: app
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
  selector:
    app: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
spec:
  ingressClassName: public
  rules:
    - host: grafana.app.home.lentner.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 80
